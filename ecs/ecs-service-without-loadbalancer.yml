---
AWSTemplateFormatVersion: 2010-09-09
Description: Deploy ECS Service - Fargate - Without Load Balancer
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
  Project:
    Type: String
    Default: ito
  MicroServiceName:
    Type: String
    Default: dummy
    AllowedPattern: ^([a-z]|[0-9])*$
  Port:
    Type: Number
    Default: 9000
    MinValue: 9000
    MaxValue: 9999
  CPU:
    Type: String
    Default: "256"
    AllowedValues:
      - "256"
      - "512"
  RAM:
    Type: String
    Default: "512"
    AllowedValues:
      - "512"
      - "1024"
  NumberTask:
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 2
  EnableDiscoveryService:
    Type: String
    Default: false
    AllowedValues:
      - false
      - true
  PublicIp:
    Type: String
    Default: ENABLED
    AllowedValues:
      - ENABLED
      - DISABLED
  DayRetentionLogs:
    Type: String
    Default: 1
    AllowedPattern: ^[1|3|5|7|14|30]?
  AgentXRay:
    Type: String
    Default: false
    AllowedValues:
      - false
      - true
  AgentCloudWatch:
    Type: String
    Default: false
    AllowedValues:
      - false
      - true
  AgentDataDog:
    Type: String
    Default: false
    AllowedValues:
      - false
      - true
  AgentFluentBit:
    Type: String
    Default: false
    AllowedValues:
      - false
      - true
  EcrEncrytion:
    Type: String
    Default: KMS
    AllowedValues:
      - AES256
      - KMS
  EcrKmsKey:
    Type: String
Conditions:
  CDiscoveryService: !Equals [ "true", !Ref EnableDiscoveryService ]
  isPublic: !Equals [ ENABLED, !Ref PublicIp ]
  enablexray: !Equals [ true, !Ref AgentXRay ]
  enablecloudwatch: !Equals [ true, !Ref AgentCloudWatch ]
  enabledatadog: !Equals [ true, !Ref AgentDataDog ]
  enableFluentBit: !Equals [ true, !Ref AgentFluentBit ]
  isEcrKmsKeyProvided: !Not [ !Equals [ !Ref EcrKmsKey, "" ] ]
Resources:
  EcrRegistry:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      EncryptionConfiguration:
        EncryptionType: !Ref EcrEncrytion
        KmsKey: !If [ isEcrKmsKeyProvided, !Ref EcrKmsKey, !Ref AWS::NoValue ]
      ImageScanningConfiguration:
        ScanOnPush: false
      ImageTagMutability: MUTABLE
      RepositoryName: !Sub ${Project}-${Environment}-${MicroServiceName}

  DiscoveryService:
    Type: AWS::ServiceDiscovery::Service
    Condition: CDiscoveryService
    Properties: 
      Description: !Sub Discovery Service for ${MicroServiceName} app
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
      HealthCheckCustomConfig: 
        FailureThreshold: 1
      Name: !Ref MicroServiceName
      NamespaceId:
        Fn::ImportValue:
          !Sub ${Project}-${Environment}-NameSpaceCloudMapId
  
  CloudWatchLogsGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub /ecs/${Project}-${Environment}-${MicroServiceName}
      RetentionInDays: !Ref DayRetentionLogs
  
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${Project}-${Environment}-${MicroServiceName}
      Cpu: !Ref CPU
      Memory: !Ref RAM
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub ${Project}-${Environment}-ECSTaskExecutionRoleArn
      TaskRoleArn:
        Fn::ImportValue:
          !Sub ${Project}-${Environment}-ECSTaskRoleArn
      ContainerDefinitions:
        - !If
          - enablexray
          - Name: !Sub ${Project}-${Environment}-xray-daemon
            Image: public.ecr.aws/xray/aws-xray-daemon@sha256:8d74426fd86f830c6793180dcefcba76ba8258eaf2deba68a612944d1845030d
            # Cpu: 32
            # MemoryReservation: 256
            Essential: false
            PortMappings:
              - ContainerPort: 2000
                Protocol: udp
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref CloudWatchLogsGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: ecs
          - !Ref AWS::NoValue
        - !If
          - enablecloudwatch
          - Name: cloudwatch-agent
            Image: public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest@sha256:f3427f46e4a7de9c2e6009ab7955924ed0454e6e021cff729ff7f9d24f13555b
            Essential: false
            Secrets:
              - Name: CW_CONFIG_CONTENT
                ValueFrom:
                  Fn::ImportValue:
                    !Sub ${Project}-${Environment}-XRayAgentConfigArn
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref CloudWatchLogsGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: ecs
          - !Ref AWS::NoValue
        - !If
          - enableFluentBit
          - Name: fluent-bit-agent
            # Image: public.ecr.aws/aws-otel-test/aws-otel-collector:latest@sha256:5e2f1c5d9d5f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f
            Image: public.ecr.aws/aws-observability/aws-for-fluent-bit:init-latest
            Essential: false
            User: 0
            # Secrets:
            #   - Name: AWS_REGION
            #     ValueFrom:
            #       Fn::ImportValue:
            #         !Sub ${Project}-${Environment}-FluentBitAgentConfigArn
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref CloudWatchLogsGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: fluentbit
            FirelensConfiguration:
              Type: fluentbit
              Options:
                config-file-type: "file"
                config-file-value: "/fluent-bit/config/extra.conf"
          - !Ref AWS::NoValue
        - !If
          - enabledatadog
          - Name: datadog-agent
            Image: public.ecr.aws/datadog/agent:latest@sha256:5e2f1c5d9d5f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f9f9e2f
            Essential: false
            Secrets:
              - Name: DD_API_KEY
                ValueFrom:
                  Fn::ImportValue:
                    !Sub ${Project}-${Environment}-DataDogAgentConfigArn
            LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref CloudWatchLogsGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: ecs
          - !Ref AWS::NoValue
        - Name: !Sub ${Project}-${Environment}-${MicroServiceName}-container
          # EnvironmentFiles:
          #   - Type: s3
          #     Value: ${ArnBucket}/keyFile
          # Secrets:
          #   - Name: stage
          #     ValueFrom: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ParameterName}
          Environment:
            - Name: PORT
              Value: !Ref Port
            - Name: TableName
              Value: Country
          Image:
            !Sub
              - ${repositoryUri}:latest
              - repositoryUri: !GetAtt EcrRegistry.RepositoryUri
          Essential: true
          # HealthCheck:
          #   Command:
          #     - CMD-SHELL
          #     - !Sub curl -f http://localhost:${Port}/api/dummy || exit 1
          #   Interval: 30
          #   Timeout: 5
          #   Retries: 3
          #   StartPeriod: 60
          PortMappings:
            - ContainerPort: !Ref Port
          LogConfiguration:
            !If
              - enableFluentBit
              - 
                LogDriver: awsfirelens
                Options:
                  aws_Region: us-east-1
                  log-driver-buffer-limit: 10485760
                  aws_Auth: "On"
                  Suppress_Type_Name: "On"
                  port: 443
                  host: HOST_OPENSEARCH
                  index: INDEX_OPENSEARCH
                  tls: "On"
                  type: doc
                  Name: es
              -
                LogDriver: awslogs
                Options:
                  awslogs-group: !Ref CloudWatchLogsGroup
                  awslogs-region: !Ref AWS::Region
                  awslogs-stream-prefix: ecs
  
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${Project}-${Environment}-${MicroServiceName}
      Cluster:
        Fn::ImportValue:
          !Sub ${Project}-${Environment}-ClusterName
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref NumberTask
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: !Ref PublicIp
          SecurityGroups:
            - Fn::ImportValue:
                !Sub ${Project}-${Environment}-SecurityGroupBackEnd
          Subnets:
            !If 
              - isPublic
              - - Fn::ImportValue:
                    !Sub ${Project}-${Environment}-PubSub1
                - Fn::ImportValue:
                    !Sub ${Project}-${Environment}-PubSub2
              - - Fn::ImportValue:
                    !Sub ${Project}-${Environment}-SrvSub1
                - Fn::ImportValue:
                    !Sub ${Project}-${Environment}-SrvSub2
      ServiceRegistries:
        !If
          - CDiscoveryService
          - - RegistryArn: !GetAtt DiscoveryService.Arn
          - !Ref AWS::NoValue
      TaskDefinition: !Ref TaskDefinition
  
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: Datos del Proyecto
        Parameters: 
          - Project
          - Environment
      - Label: 
          default: Datos del micro-servicio
        Parameters: 
          - MicroServiceName
          - Port
          - CPU
          - RAM
          - NumberTask
          - DayRetentionLogs
          - PublicIp
      - Label:
          default: Agentes
        Parameters:
          - AgentXRay
          - AgentCloudWatch
          - AgentDataDog
          - AgentFluentBit
      - Label:
          default: Cifrado de Imagen Docker
        Parameters:
          - EcrEncrytion
          - EcrKmsKey
      - Label:
          default: Componentes Adicionales
        Parameters:
          - EnableDiscoveryService
    ParameterLabels: 
      Project: 
        default: Nombre del Proyecto
      Environment: 
        default: Nombre del Ambiente
      MicroServiceName:
        default: Nombre del micro-servicio
      Port:
        default: Numero del Puerto
      CPU:
        default: Cantidad de CPU
      RAM:
        default: Cantidad de Memoria RAM
      NumberTask:
        default: Numero de Tareas
      EnableDiscoveryService:
        default: Requiere Discovery Service
      PublicIp:
        default: Asignar IP Publica
      DayRetentionLogs:
        default: Cantidad de dias de almacenamiento de logs
      AgentXRay:
        default: Activar Agente XRay
      AgentCloudWatch:
        default: Activar Agente CloudWatch
      AgentDataDog:
        default: Activar Agente DataDog
      EcrEncrytion:
        default: Tipo de Cifrado
      EcrKmsKey:
        default: KMS Key
      AgentFluentBit:
        default: Activar Agente FluentBit