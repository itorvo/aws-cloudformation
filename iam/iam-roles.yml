---
AWSTemplateFormatVersion: 2010-09-09
Description: Creacion de Roles y Politicas para Proyecto
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
  Project:
    Type: String
    Default: ito
    AllowedPattern: ^([a-z]|[0-9])*$

Resources:
  PolicyExecution:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Politica con permisos de ejecución de la aplicación
      ManagedPolicyName: !Sub ${Project}-${Environment}-policy-execution-aplication
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - batch:SubmitJob
              - cognito-idp:AddCustomAttributes
              - cognito-idp:AdminInitiateAuth
              - cognito-idp:AdminUpdateUserAttributes
              - cognito-idp:ChangePassword
              - cognito-idp:ConfirmDevice
              - cognito-idp:ConfirmSignUp
              - cognito-idp:ConfirmForgotPassword
              - cognito-idp:ForgotPassword
              - cognito-idp:GetIdentityProviderByIdentifier
              - cognito-idp:GetUser
              - cognito-idp:InitiateAuth
              - cognito-idp:ListUsers
              - cognito-idp:ListUserPools
              - cognito-idp:VerifyUserAttribute
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:ListTables
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
              - ecs:DescribeTaskDefinition
              - ecs:ListClusters
              - ecs:ListServices
              - ecs:ListTaskDefinitions
              - execute-api:Invoke
              - execute-api:ManageConnections
              - lambda:InvokeAsync
              - lambda:InvokeFunction
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
              - secretsmanager:ListSecrets
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
              - sqs:SendMessage
              - sns:Publish
              - s3:*
            Resource: '*'
      Roles:
        - !Ref ECSTaskExecutionRole
        - !Ref ECSTaskRole
        - !Ref RoleLambdaExecution
  
  PolicyNoLogs:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Politica bloqueando la generación de logs
      ManagedPolicyName: !Sub ${Project}-${Environment}-policy-deny-logs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: '*'
      Roles:
        - !Ref RoleLambdaExecution
        - !Ref RoleLambdaEdgeExecution
        - !Ref RoleEmailChannelPinpoint
        - !Ref RoleKMSAdmin
        - !Ref RoleCustomResourceLambda
  
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: !Sub ${Project}-${Environment}-ecs-task-execution-role
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: !Sub ${Project}-${Environment}-ecs-task-role
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
  RoleLambdaExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: !Sub ${Project}-${Environment}-lambda-role-execution
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
  
  RoleLambdaEdgeExecution:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action:
              - sts:AssumeRole
      RoleName: !Sub ${Project}-${Environment}-lambda-edge-role-execution
      Path: /

  RoleEmailChannelPinpoint:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: pinpoint.amazonaws.com
            Action: sts:AssumeRole
      Description: Acceso a envío de notificaciones
      MaxSessionDuration: 3600
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - mobileanalytics:PutEvents
                  - mobileanalytics:PutItems
                Effect: Allow
                Resource: '*'
          PolicyName: kiire-policy-pinpoint-notification-access
      RoleName: !Sub ${Project}-${Environment}-pinpoint-role-emailchannel-notification-access
  
  RoleKMSAdmin:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub ${Project}-${Environment}-kms-key-admin
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref 'AWS::AccountId'
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser'
  
  RoleCustomResourceLambda:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${Project}-${Environment}-custom-resource
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub ${Project}${Environment}-lambda-deployment-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:PublishVersion
                Resource:
                  - '*'
        - PolicyName: !Sub ${Project}-${Environment}-policy-create-apigateway-deployment
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - apigateway:POST
                Resource:
                  - '*'
  
Outputs:
  ECSTaskExecutionRole:
    Description: ECS Task Execution Role Name
    Value: !Ref ECSTaskExecutionRole
    Export:
      Name: !Sub ${Project}-${Environment}-ECSTaskExecutionRole
  ECSTaskExecutionRoleArn:
    Description: ECS Task Execution Role Arn
    Value: !GetAtt ECSTaskExecutionRole.Arn
    Export:
      Name: !Sub ${Project}-${Environment}-ECSTaskExecutionRoleArn
  ECSTaskRole:
    Description: ECS Task Role Name
    Value: !Ref ECSTaskRole
    Export:
      Name: !Sub ${Project}-${Environment}-ECSTaskRole
  ECSTaskRoleArn:
    Description: ECS Task Role Arn
    Value: !GetAtt ECSTaskRole.Arn
    Export:
      Name: !Sub ${Project}-${Environment}-ECSTaskRoleArn
  RoleLambdaExecution:
    Description: ECS Task Role Name
    Value: !Ref RoleLambdaExecution
    Export:
      Name: !Sub ${Project}-${Environment}-RoleLambdaExecution
  RoleLambdaExecutionArn:
    Description: ECS Task Role Arn
    Value: !GetAtt RoleLambdaExecution.Arn
    Export:
      Name: !Sub ${Project}-${Environment}-RoleLambdaExecutionArn
  RoleLambdaEdgeExecution:
    Description: Lambda Edge Role Name
    Value: !Ref RoleLambdaEdgeExecution
    Export:
      Name: !Sub ${Project}-${Environment}-RoleLambdaEdgeExecution
  RoleLambdaEdgeExecutionArn:
    Description: Lambda Edge Role Arn
    Value: !GetAtt RoleLambdaEdgeExecution.Arn
    Export:
      Name: !Sub ${Project}-${Environment}-RoleLambdaEdgeExecutionArn
  RoleEmailChannelPinpoint:
    Description: Email Channel Pinpoint Role Name
    Value: !Ref RoleEmailChannelPinpoint
    Export:
      Name: !Sub ${Project}-${Environment}-RoleEmailChannelPinpoint
  RoleEmailChannelPinpointArn:
    Description: Email Channel Pinpoint Role Arn
    Value: !GetAtt RoleEmailChannelPinpoint.Arn
    Export:
      Name: !Sub ${Project}-${Environment}-RoleEmailChannelPinpointArn
  RoleKMSAdmin:
    Description: KMS Admin Role Name
    Value: !Ref RoleKMSAdmin
    Export:
      Name: !Sub ${Project}-${Environment}-RoleKMSAdmin
  RoleKMSAdminArn:
    Description: KMS Admin Role Arn
    Value: !GetAtt RoleKMSAdmin.Arn
    Export:
      Name: !Sub ${Project}-${Environment}-RoleKMSAdminArn
  RoleCustomResourceLambda:
    Description: Custom Resource Lambda Role Name
    Value: !Ref RoleCustomResourceLambda
    Export:
      Name: !Sub ${Project}-${Environment}-RoleCustomResourceLambda
  RoleCustomResourceLambdaArn:
    Description: Custom Resource Lambda Role Arn
    Value: !GetAtt RoleCustomResourceLambda.Arn
    Export:
      Name: !Sub ${Project}-${Environment}-RoleCustomResourceLambdaArn
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: Datos del Proyecto
        Parameters: 
          - Project
          - Environment
    ParameterLabels: 
      Project: 
        default: Nombre del Proyecto
      Environment: 
        default: Nombre del Ambiente