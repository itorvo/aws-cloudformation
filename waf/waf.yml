AWSTemplateFormatVersion: 2010-09-09
Description: Enable WAF Rules
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
  Project:
    Description: Nombre del Proyecto
    Type: String
    Default: ito
  Scope:
    Description: Tipo de ACL
    Type: String
    Default: REGIONAL
    AllowedValues:
      - REGIONAL
      - CLOUDFRONT
  ArnAPIGWStage:
    Description: ARN del API Gateway
    Type: String
    Default: ''
  WithRulesCommonRuleSet:
    Description: Regla de seguridad estandar de AWS
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  WithRuleIpReputationList:
    Description: Regla de seguridad estandar para Lista de Reputacion de IPs
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  WithRulesKnownBadInputs:
    Description: Regla de seguridad estandar para entradas incorrectas conocidas
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  WithRuleBlockXssAttack:
    Description: Regla de seguridad para bloquear ataques Xss
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  WithRuleBlockSQLinjectionAttack:
    Description: Regla de seguridad para bloquear ataque SQL Injection
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  WithRuleHeaderSecurity:
    Description: Regla de seguridad para validar existencia de Header de Seguridad
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  HeaderName:
    Description: Nombre del Header de Seguridad
    Type: String
    Default: X-Origin-Verify
    AllowedValues:
      - X-Origin-Verify
  OriginVerifyHeader:
    Type: String
Conditions:
  isAPIG: !Equals [ !Ref Scope, 'REGIONAL']
  hasRulesCommonRuleSet: !Equals [ !Ref WithRulesCommonRuleSet, 'true']
  hasRulesBlockXssAttack: !Equals [ !Ref WithRuleBlockXssAttack, 'true']
  hasRulesBlockSQLinjectionAttack: !Equals [ !Ref WithRuleBlockSQLinjectionAttack, 'true']
  hasRulesIpReputationList: !Equals [ !Ref WithRuleIpReputationList, 'true']
  hasRulesKnownBadInputs: !Equals [ !Ref WithRulesKnownBadInputs, 'true']
  hasRulesHeaderSecurity: !Equals [ !Ref WithRuleHeaderSecurity, 'true']
Resources:
  WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      Name: !Sub ${Project}-${Environment}-waf-acl-${Scope}
      Scope: !Sub ${Scope}
      Description: !Sub Reglas de seguridad para ${Scope} en el ambiente ${Environment}
      DefaultAction:
        Block: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub ${Project}-${Environment}-waf-WebACLMetric-${Scope}
      Rules:
        - !If
          - hasRulesCommonRuleSet
          - Name: RuleForAWSManagedRulesCommonRuleSet
            Priority: 0
            OverrideAction:
              Count: {}
            VisibilityConfig:
              SampledRequestsEnabled: true
              CloudWatchMetricsEnabled: true
              MetricName: RuleWithAWSManagedRulesMetricCommonRuleSet
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesCommonRuleSet
                ExcludedRules: []
          - !Ref 'AWS::NoValue'
        - !If
          - hasRulesBlockXssAttack
          - Name: RuleForBlockXssAttack
            Priority: 1
            Action:
              Block: {}
            VisibilityConfig:
              SampledRequestsEnabled: true
              CloudWatchMetricsEnabled: true
              MetricName: BlockXssAttackMetric
            Statement:
              XssMatchStatement:
                FieldToMatch:
                  AllQueryArguments: {}
                TextTransformations:
                  - Priority: 1
                    Type: NONE
          - !Ref 'AWS::NoValue'
        - !If
          - hasRulesBlockSQLinjectionAttack
          - Name: RuleForBlockSQLinjectionAttack
            Priority: 2
            Action:
              Block: {}
            VisibilityConfig:
              SampledRequestsEnabled: true
              CloudWatchMetricsEnabled: true
              MetricName: BlockSQLinjectionAttackMetric
            Statement:
              SqliMatchStatement:
                FieldToMatch:
                  AllQueryArguments: {}
                TextTransformations:
                  - Priority: 1
                    Type: NONE
          - !Ref 'AWS::NoValue'
        - !If
          - hasRulesIpReputationList
          - Name: RuleForAWSManagedRulesAWSList
            Priority: 3
            OverrideAction:
              Count: {}
            VisibilityConfig:
              SampledRequestsEnabled: true
              CloudWatchMetricsEnabled: true
              MetricName: RuleWithAWSManagedRulesMetricAWSList
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesAmazonIpReputationList
                ExcludedRules: []
          - !Ref 'AWS::NoValue'
        - !If
          - hasRulesKnownBadInputs
          - Name: RuleForAWSManagedRulesKnownBadInputs
            Priority: 4
            OverrideAction:
              Count: {}
            VisibilityConfig:
              SampledRequestsEnabled: true
              CloudWatchMetricsEnabled: true
              MetricName: RuleWithAWSManagedRulesMetricKnownBadInputs
            Statement:
              ManagedRuleGroupStatement:
                VendorName: AWS
                Name: AWSManagedRulesKnownBadInputsRuleSet
                ExcludedRules: []
          - !Ref 'AWS::NoValue'
        - !If
          - hasRulesHeaderSecurity
          - Name: RuleForHeaderSecurity
            Priority: 5
            Action:
              Allow: {}
            VisibilityConfig:
              SampledRequestsEnabled: true
              CloudWatchMetricsEnabled: true
              MetricName: !Sub '${AWS::StackName}-XMetric'
            Statement:
              OrStatement:
                Statements:
                - ByteMatchStatement:
                    FieldToMatch:
                      SingleHeader:
                        Name: !Ref HeaderName
                    PositionalConstraint: EXACTLY
                    SearchString: !Join ['', ['{{resolve:secretsmanager:', !Ref OriginVerifyHeader, ':SecretString:HEADERVALUE}}' ]]
                    TextTransformations:
                      - Priority: 0
                        Type: NONE
                - ByteMatchStatement:
                    FieldToMatch:
                      SingleHeader:
                        Name: !Ref HeaderName
                    PositionalConstraint: EXACTLY
                    SearchString: !Join ['', ['{{resolve:secretsmanager:', !Ref OriginVerifyHeader, ':SecretString:HEADERVALUE}}' ]]
                    TextTransformations:
                      - Priority: 0
                        Type: NONE
          - !Ref 'AWS::NoValue'
  WafAPIGWAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Condition: isAPIG
    Properties:
      WebACLArn: !GetAtt WebACL.Arn
      ResourceArn: !Ref ArnAPIGWStage
          # !Sub
          # - 'arn:aws:apigateway:${AWS::Region}::/restapis/${rest_api_id}/stages/${stage_name}'
          # - rest_api_id: !Select [0, !Split ['.' , !Select [2, !Split ['/', !Ref ApiGatewayURL]]]]
          #   stage_name: !Select [3, !Split ['/', !Ref ApiGatewayURL]]
Outputs:
  WebACLIdentifier:
    Value: !Ref WebACL
  WebACLArn:
    Value: !GetAtt WebACL.Arn
  WebACLId:
    Value: !GetAtt WebACL.Id
  RuleNameHeaderSecurity:
    Value: RuleForHeaderSecurity
    Condition: hasRulesHeaderSecurity
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: Datos del Proyecto
        Parameters: 
          - Project
          - Environment
      - Label: 
          default: Configuracion de ACL
        Parameters: 
          - Scope
      - Label: 
          default: Reglas de ACL
        Parameters: 
          - WithRulesCommonRuleSet
          - WithRuleIpReputationList
          - WithRulesKnownBadInputs
          - WithRuleBlockXssAttack
          - WithRuleBlockSQLinjectionAttack
          # - WithRuleHeaderSecurity
      - Label: 
          default: Configuracion API Gateway
        Parameters: 
          - ArnAPIGWStage
          # - HeaderName
    ParameterLabels: 
      Project: 
        default: Nombre del Proyecto
      Environment: 
        default: Nombre del ambiente
      Scope: 
        default: Tipo de ACL
      ArnAPIGWStage: 
        default: ARN del API Gateway
      WithRulesCommonRuleSet: 
        default: Regla de seguridad estandar de AWS
      WithRuleIpReputationList: 
        default: Regla de seguridad estandar para Lista de Reputacion de IPs
      WithRulesKnownBadInputs:
        default: Regla de seguridad estandar para entradas incorrectas conocidas
      WithRuleBlockXssAttack:
        default: Regla de seguridad para bloquear ataques Xss
      WithRuleBlockSQLinjectionAttack:
        default: Regla de seguridad para bloquear ataque SQL Injection
      WithRuleHeaderSecurity:
        default: Regla de seguridad para validar existencia de Header de Seguridad
      HeaderName:
        default: Nombre del Header de Seguridad